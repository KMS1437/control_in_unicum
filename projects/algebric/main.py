from telebot import types
import random
import telebot
import re
from sympy import sympify, expand, solve
import json
import os

bot = telebot.TeleBot("—Ç–æ–∫–µ–Ω –º–∞–∫—Å–∏–∫–∞")

if os.path.exists('admins.json'):
    with open('admins.json', 'r') as file:
        admins = json.load(file)['admins']
else:
    print("–§–∞–π–ª admins.json –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")


@bot.message_handler(commands=['code'])
def send_code(message):
    user_id = str(message.from_user.id)
    print(f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.first_name}:", user_id)
    if user_id in admins:
        with open('main.py', 'r', encoding='utf-8') as file:
            bot.send_message(message.chat.id, "*–ö–æ–¥ –±–æ—Ç–∞:*", parse_mode="Markdown")
            bot.send_document(message.chat.id, file)

    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω. –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")


def replace_superscript(text):
    superscripts = {
        '0': '‚Å∞',
        '1': '¬π',
        '2': '¬≤',
        '3': '¬≥',
        '4': '‚Å¥',
        '5': '‚Åµ',
        '6': '‚Å∂',
        '7': '‚Å∑',
        '8': '‚Å∏',
        '9': '‚Åπ'
    }

    def replace_match(match):
        return superscripts.get(match.group(0)[1], match.group(0))

    pattern = re.compile(r"\^(\d)")
    result = re.sub(pattern, replace_match, text)
    return result


@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "*üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ –∞–ª–≥–µ–±—Ä–µ –∏ —Ä–∞–±–æ—Ç–∞—é –Ω–∞ –î–º–∏—Ç—Ä–∏—è –ë–æ—Ä–∏—Å–æ–≤–∏—á–∞. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?*",
                     parse_mode="Markdown")
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:",
                     reply_markup=get_keyboard())


@bot.message_handler(commands=['sasat'])
def handle_sosi(message):
    bot.send_message(message.chat.id, f'*üçå–í–æ—Ç –≤–µ–∑–¥–µ –Ω–∞–π–¥–µ—à—å –ª–∞–∑–µ–π–∫—É —á—Ç–æ–±—ã –ø–æ—Å–æ—Å–∞—Ç—å, {message.from_user.first_name}!*', parse_mode="Markdown")


@bot.message_handler(commands=['1000-7'])
def handle_deadinside(message):
    bot.send_message(message.chat.id, f'*üê∑–ú–∞–ª–æ–ª–µ—Ç–Ω–∏–π –¥–µ–¥ –∏–Ω—Å–∞–π–¥ {message.from_user.first_name}*', parse_mode="Markdown")


@bot.message_handler(commands=['fuckingsemen'])
def handle_semen(message):
    bot.send_message(message.chat.id, f'*Oh yes {message.from_user.first_name}*', parse_mode="Markdown")

@bot.message_handler(commands=['idinahuy'])
def handle_idinahuy(message):
    bot.send_message(message.chat.id, f'*üò∂‚Äçüå´Ô∏è {message.from_user.first_name}, –≤—ã —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç–µ*', parse_mode="Markdown")


@bot.message_handler(func=lambda message: True)
def handle_text(message):
    user_input = message.text
    chance = random.randrange(1, 100)
    if message.from_user.id == 5041299186:
        bot.send_message(message.chat.id,
                         f"*‚ö° –¢—ã –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–ª–∏—á–Ω–∏–∫, {message.from_user.first_name}.*",
                         parse_mode="Markdown")
    elif user_input == "üèÜ –ú–∏—à–∞ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã–π –¥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
        bot.send_message(message.chat.id, f"*Ô∏è‚öú –û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ, {message.from_user.first_name}!*", parse_mode="Markdown")
    elif user_input == "üíÄ –ù–∞—Å–∫–æ–ª—å–∫–æ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã–π —è?":
        bot.send_message(message.chat.id, f"*‚öú {message.from_user.first_name}, –≤—ã –∏—Å–ø–æ—Ä—á–µ–Ω—ã –Ω–∞ {chance}%*", parse_mode="Markdown")
    elif user_input == "üíª –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º?":
        bot.send_message(message.chat.id,
                         f"*‚öú {message.from_user.first_name}, –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π –º–Ω–æ–≥–æ—á–ª–µ–Ω –∏–ª–∏ –∞–ª–≥–µ–±—Ä–æ–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫ –ø—Ä–∏–º–µ—Ä—É (a-3)(a+3).*",
                         parse_mode="Markdown")
        bot.send_message(message.chat.id,
                         "*–ß—Ç–æ–±—ã –±–æ—Ç —Ä–µ—à–∏–ª –≤—Å–µ, —Å—Ç–µ–ø–µ–Ω—å –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ ^, –∞ —É–º–Ω–æ–∂–µ–Ω–∏–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –∑–≤–µ–∑–¥–æ—á–∫–æ–π, –¥—Ä–æ–±—å –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –∫–∞–∫ /, —ç—Ç–æ –∂–µ –∏ –¥–µ–ª–µ–Ω–∏–µ. *",
                         parse_mode="Markdown")
        bot.send_message(message.chat.id,
                         "*–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –∫–æ—Ä–µ–Ω—å —É—Ä–∞–≤–Ω–µ–Ω–∏—è, —Ç–æ –≤–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª–µ–≤—É—é –∏ –ø—Ä–∞–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —É—Ä–∞–≤–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ +. –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –±–µ–∑ –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –∏ =*",
                         reply_markup=get_keyboard(), parse_mode="Markdown")
    elif user_input == "‚ùì –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞":
        markup = telebot.types.InlineKeyboardMarkup()
        button1 = telebot.types.InlineKeyboardButton("–ö–∞–Ω–∞–ª –ø–æ –ø—Ä–æ–µ–∫—Ç—É", url='https://t.me/project_unicum')
        markup.add(button1)
        bot.send_message(message.chat.id, "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", reply_markup=markup)
    else:
        try:
            if re.match(r'^[a-zA-Z0-9+\-*/^().= ]+$', user_input):
                if "=" in user_input:
                    equation = sympify(user_input.split("=")[0]) - sympify(user_input.split("=")[1])
                    root = solve(equation)
                    response = f"*‚öúÔ∏è –ö–æ—Ä–µ–Ω—å —É—Ä–∞–≤–Ω–µ–Ω–∏—è:* {root}"
                else:
                    result = sympify(user_input)
                    expanded_result = expand(result)
                    result_str = replace_superscript(str(expanded_result).replace("**", "^"))
                    response = f"*‚öúÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç:* {result_str}"
            else:
                response = "*üö´ –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è.*"
        except Exception as e:
            response = f"*üö´ –û—à–∏–±–∫–∞:* {e}"
        bot.send_message(message.chat.id, response, parse_mode="Markdown")


def get_keyboard():
    markup = types.ReplyKeyboardMarkup(row_width=2)
    button1 = types.KeyboardButton("üèÜ –ú–∏—à–∞ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã–π –¥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
    button2 = types.KeyboardButton("üíª –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º?")
    button3 = types.KeyboardButton("üíÄ –ù–∞—Å–∫–æ–ª—å–∫–æ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã–π —è?")
    button4 = types.KeyboardButton("‚ùì –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞")
    markup.add(button1, button2, button3, button4)
    return markup


if __name__ == "__main__":
    bot.polling(none_stop=True)
